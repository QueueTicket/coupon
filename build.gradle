plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'maven-publish'
	id 'com.google.cloud.tools.jib' version '3.2.0'
}

group = 'com.qticket'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()

	maven {
		url = uri("https://maven.pkg.github.com/QueueTicket/common")
		credentials {
			username = "QueueTicket"
			password = System.getenv("GITHUB_TOKEN")
		}
	}
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	// queryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation 'com.qticket:common:0.0.18'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'io.github.openfeign:feign-jackson:12.3'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	implementation 'org.springframework.kafka:spring-kafka'
	runtimeOnly 'com.h2database:h2:2.2.220'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

clean {
	delete file('src/main/generated')
}

jib {
	from {
		image = "openjdk:17-jdk-slim"
	platforms {
		platform {
			architecture = "arm64"
			os = "linux"
		}
	//		platform {
	//			architecture = "amd64"
	//			os = "linux"
	//		}
	}
	}
	to {
		image = "shoon95/${project.name}:latest"
	}
	container {
		mainClass = "com.qticket.coupon.CouponApplication"
		creationTime = "USE_CURRENT_TIMESTAMP"
	}
}
